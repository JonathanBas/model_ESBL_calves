model {

	# INITIAL CARRIAGE
	
	for (indiv in init_pos){
		portage_obs[indiv,1] <- 1
	}
	
	for (indiv in init_neg){
		portage_obs[indiv,1] <- 0
	}
	
	# BETWEEN WEEKS 2 AND 55
	
	for (t in 2:55){
		p_intro[1,t] <- mu * (p1_f1[N_intro_plus1_f1] == t) + mu * (p2_f1[N_intro_plus1_f1] == t)
		p_intro[2,t] <- mu * (p1_f2[N_intro_plus1_f2] == t) + mu * (p2_f2[N_intro_plus1_f2] == t)
		p_intro[3,t] <- mu * (p1_f3[N_intro_plus1_f3] == t) + mu * (p2_f3[N_intro_plus1_f3] == t)
		
		for (indiv in 1:N_calves){
			prob_equal_1[indiv,t] <- ifelse(portage_obs[indiv,t-1] == 0,
											1-exp(-(p_intro[farm_bel[indiv,4],t] + beta_f[farm_bel[indiv,4]] * sum(portage_obs[,t-1] * farm_bel[, farm_bel[indiv,4]]) / 15)),
											exp(-nu_0))
			
			portage_obs[indiv,t] ~ dbern(max(0.00001, prob_equal_1[indiv,t]))
		}
	}
	
	# BETWEEN WEEKS 56 and END (161)
	
	for (t in 56:t_end){
		p_intro[1,t] <- mu * (p1_f1[N_intro_plus1_f1] == t) + mu * (p2_f1[N_intro_plus1_f1] == t)
		p_intro[2,t] <- mu * (p1_f2[N_intro_plus1_f2] == t) + mu * (p2_f2[N_intro_plus1_f2] == t)
		p_intro[3,t] <- mu * (p1_f3[N_intro_plus1_f3] == t) + mu * (p2_f3[N_intro_plus1_f3] == t)

		for (indiv in from_56){
			prob_equal_1[indiv,t] <- ifelse(portage_obs[indiv,t-1] == 0,
											1-exp(-(p_intro[farm_bel[indiv,4],t] + beta_f[farm_bel[indiv,4]] * sum(portage_obs[from_56,t-1] * farm_bel[from_56, farm_bel[indiv,4]]) / sum(farm_bel[from_56, farm_bel[indiv,4]]))),
											exp(-nu_0))
			
			portage_obs[indiv,t] ~ dbern(max(0.00001, prob_equal_1[indiv,t]))
		}
	}
	
	# PRIORS
	
	nu_0 ~ dunif(0,10)

	mu ~ dunif(0,10)
	
	for(i in 1:7){q[i] <- 0}
	for(i in 8:t_end){q[i] <- 1/(t_end-7)}
	for(i in 1:3){p[i] = 1/3}

	N_intro_plus1_f1 ~ dcat(p[])
	N_intro_plus1_f2 ~ dcat(p[])
	N_intro_plus1_f3 ~ dcat(p[])
	
	p1_f1[1] <- 0
	p1_f1[2] ~ dcat(q[])
	p1_f1[3] ~ dcat(q[])
	p2_f1[1] <- 0
	p2_f1[2] <- 0
	p2_f1[3] ~ dcat(q[])
	
	p1_f2[1] <- 0
	p1_f2[2] ~ dcat(q[])
	p1_f2[3] ~ dcat(q[])
	p2_f2[1] <- 0
	p2_f2[2] <- 0
	p2_f2[3] ~ dcat(q[])

	p1_f3[1] <- 0
	p1_f3[2] ~ dcat(q[])
	p1_f3[3] ~ dcat(q[])
	p2_f3[1] <- 0
	p2_f3[2] <- 0
	p2_f3[3] ~ dcat(q[])
	
	beta_f_f1 ~ dunif(0,10)
	beta_f_f2 ~ dunif(0,10)
	beta_f_f3 ~ dunif(0,10)
	beta_f[1] <- beta_f_f1
	beta_f[2] <- beta_f_f2
	beta_f[3] <- beta_f_f3
}
